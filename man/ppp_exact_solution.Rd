% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ppp_exact_solution.R
\name{ppp_exact_solution}
\alias{ppp_exact_solution}
\title{Solve the 'Project Prioritization Protocol' problem using exact algorithms}
\usage{
ppp_exact_solution(x, tree, budget, project_column_name, cost_column_name,
  success_column_name, locked_in_column_name = NULL,
  locked_out_column_name = NULL, gap = 1e-06, threads = 1L,
  number_solutions = 1L, time_limit = .Machine$integer.max,
  number_approx_points = 300, verbose = FALSE)
}
\arguments{
\item{x}{\code{\link[base]{data.frame}} or \code{\link[tibble]{tibble}}
table containing project data. Here, each row should correspond to
a different project and columns should contain data that correspond to
each project. This object should contain data that denote (i)
the name of each project (specified in the argument to
\code{project_column_name}), (ii) the
probability that each project will succeed if all of its actions are funded
(specified in the argument to \code{success_column_name}), (iii)
the enhanced probability that each species will persist if it
is funded (specified as the tip labels in the argument to \code{tree}),
and (iv) and which actions are associated with which projects
(specified in the action names in the argument to \code{y}).
To account for the combined benefits of multiple actions (e.g. baiting
and trapping different invasive species in the same area), additional
projects should be created that indicate the combined cost and
corresponding species' persistence probabilities. Furthermore, this object
must have a baseline project, with a zero cost, that represents the
probability that each species will persist if no other conservation
project is funded.}

\item{tree}{\code{\link[ape]{phylo}} phylogenetic tree describing the
evolutionary history of the species affected by the conservation
projects that could potentially be funded. Note that every single
species that is affected by the various conservation projects should
be represented in this tree.}

\item{budget}{\code{numeric} value that represents the total budget available
for funding conservation projects.}

\item{project_column_name}{\code{character} name of column that contains
the name for each conservation project. Note that the project names
must not contain any duplicates or missing values.}

\item{cost_column_name}{\code{character} name of column that
indicates the cost for funding each project. This column must have
\code{numeric} values which are equal to or greater than zero. No missing
values are permitted.}

\item{success_column_name}{\code{character} name of column that
denotes the probability that each project will succeed if it is funded.
This column must have \code{numeric} values which lay between zero and one.
No missing values are permitted.}

\item{locked_in_column_name}{\code{character} name of column that
indicates which projects should be locked into the funding scheme. For
example, it may be desirable to mandate that projects for
iconic species are funded in the prioritization. This column should
contain \code{logical} values, and projects associated with \code{TRUE}
values are locked into the solution. No missing values are permitted.
Defaults to \code{NULL} such that no projects are locked into the
solution.}

\item{locked_out_column_name}{\code{character} name of column that
indicates which projects should be locked out of the funding scheme. For
example, it may be desirable to lock out projects for certain species
that are expected to have little support from the public. This column
should contain \code{logical} values, and projects associated with
\code{TRUE} values are locked out of the solution. No missing values are
permitted. Defaults to \code{NULL} such that no projects are locked out of
the solution.}

\item{gap}{\code{numeric} optimality gap. This gap should be expressed as
a proportion. For example, to find a solution that is within 10 % of
optimality, then \code{0.1} should be supplied. No missing values are
permitted. Defaults to \code{0}, so that the optimal solution will be
returned.}

\item{threads}{\code{numeric} number of threads for computational processing.
No missing values are permitted. Defaults to \code{1}.}

\item{number_solutions}{\code{numeric} number of solutions to return. If
the argument is greater than \code{1}, then the output will contain the
set number of solutions that are closest to optimality. No missing values
are permitted. Defaults to \code{1}.}

\item{time_limit}{\code{numeric} maximum number of seconds that should be
spent searching for a solution after formatting the data. Effectively,
defaults to no time limit (but specifically is
\code{.Machine$integer.max}). No missing values are permitted.}

\item{number_approx_points}{\code{numeric} number of points to use for
approximating the probability that branches will go extent. Larger
values increase the precision of these calculations.
No missing values are permitted. Defaults to \code{300}.}

\item{verbose}{\code{logical} should information be printed while solving
the problem? No missing values are permitted. Defaults to \code{FALSE}.}
}
\value{
A \code{\link[tibble]{tibble}} object containing the
  solution(s) data. Each row corresponds to a different solution, and
  each column describes a different property of the solution. The object
  contains a column for each project (based on the argument to
  \code{project_column_name}) which contains \code{logical} values indicating
  if the project was prioritized for funded (\code{TRUE}) or not
  (\code{FALSE}) in a given solution. Additionally, the object also contains
  the following columns:

 \describe{

   \item{\code{"method"}}{\code{character} name of method used to produce the
     solution(s).)}

   \item{\code{"budget"}}{\code{numeric} budget used for generating each of
     the of the solution(s).}

   \item{\code{"epd"}}{\code{numeric} expected phylogenetic diversity
     associated with each of the solutions. This
     corresponds to the expected amount of evolutionary history that is
     retained by each solution (Faith 2008). If no phylogenetic tree
     was specified, then this column will contain missing values
     (i.e. \code{NA_real_})}.

   \item{\code{"er"}}{\code{numeric} expected species richness. This is
     the sum of the species' persistence probabilities.}

   \item{\code{"cost"}}{\code{numeric} total cost associated with each of
     of the solution(s).}

   \item{\code{"optimal"}}{\code{logical} indicating if each of the
     solution(s) is known to be optimal (\code{TRUE}) or not (\code{FALSE}.
     Missing values (\code{NA}) indicate that optimality is unknown
     (i.e. because the method used to produce the solution(s) does not
     provide any bounds on their quality).}

 }
}
\description{
Prioritize funding for conservation projects using exact algorithms. Unlike
other methods for solving the under the 'Project Prioritization Protocol'
(Joseph, Maloney & Possingham 2009), this method can identify
solutions that are guaranteed to be optimal (or within a pre-specified
optimality gap; see Underhill 1994; Rodrigues & Gaston 2002).
\strong{As a consequence, it is strongly recommended to use
this method for developing project prioritizations.}
}
\details{
This function works by formulating the 'Project Prioritization
  Protocol' as a mixed integer programming problem (MIP) and solving it
  using the
  \href{https://www.gurobi.com}{Gurobi optimization software suite}.
  Although \href{https://www.gurobi.com}{Gurobi} is a commercial software,
  academics can obtain a \href{https://user.gurobi.com/download/licenses/free-academic}{special license for no cost}.
   After downloading and installing the
  href{https://www.gurobi.com}{Gurobi} software suite, the
  \pkg{gurobi} package will also need to be installed (see instructions for
  \href{http://www.gurobi.com/documentation/8.1/quickstart_linux/software_installation_guid.html}{Linux},
  \href{http://www.gurobi.com/documentation/8.1/quickstart_mac/software_installation_guid.html}{Mac OSX}, and
  \href{http://www.gurobi.com/documentation/8.1/quickstart_windows/software_installation_guid.html}{Windows} operating systems).
Finally, the \pkg{gurobi} package will also need to be installed (see
instructions for
 \href{http://www.gurobi.com/documentation/8.1/quickstart_linux/r_installing_the_r_package.html}{Linux},
  \href{http://www.gurobi.com/documentation/8.1/quickstart_mac/r_installing_the_r_package.html}{Mac OSX}, and
  \href{http://www.gurobi.com/documentation/8.1/quickstart_windows/r_installing_the_r_package.html}{Windows} operating systems).

The objective of this problem is to maximize the amount of evolutionary
history
that is expected to remain within a specified period of time (e.g. 100
years; i.e. 'expected phylogenetic diversity'; Faith 2008). Let \eqn{I}
represent each project (indexed by \eqn{i}). Let \eqn{P_i} represent the
probability of project \eqn{i} being successful if it is funded. Let
\eqn{C_i} denote the cost for funding project \eqn{i}, and let \eqn{m}
define the maximum
expenditure (budget) for funding the projects. Also, let \eqn{S} represent
each species (e.g. species; indexed by \eqn{s}). Note that \eqn{S} should,
ideally, contain all species in the study area to account for the complete
phylogenetic diversity present in the study area. To represent the benefits
for funding a project, let \eqn{B_{is}} denote the probability of
persistence for the species \eqn{s} if project \eqn{i} is funded and project
\eqn{i} is used to conserve that species (see below for why funded projects
may not necessarily be used to conserve a given species). To account for the
phylogenetic contributions for protecting each species, consider a
phylogenetic tree that contains species \eqn{s \in S}{s in S} and contains
branches with  known lengths. To describe the tree using mathematical
notation, let \eqn{B} represent the branches (indexed by \eqn{b}) with
lengths
\eqn{L_b} and let \eqn{T_{bs}} indicate which species \eqn{s \in S}{s in S}
are associated with which phylogenetic branches \eqn{b \in B}{b in B} using
zeros and ones.

The binary control variables \eqn{X_i} in this problem indicate whether each
project \eqn{i \in I}{i in I} is funded (variable equal to one) or not
(variable equal to zero). The decision variables in this problem represent
which projects are the \eqn{Y_{is}}, \eqn{E_s}, and \eqn{R_b} variables.
Specifically, the binary \eqn{Y_{is}} variables indicate if project \eqn{i}
is used to conserve species \eqn{s} (variable equal to one) or not (variable
equal to zero); the semi-continuous \eqn{E_s} variables denote if species
\eqn{s} will go extinct; and the semi-continuous \eqn{R_b} variables denote
the probability that phylogenetic branch \eqn{b} will remain.

Now that we have defined all the data and variables, we can formulate
the problem. For convenience, let the symbol used to denote each set also
represent its cardinality (e.g. if there are ten species, let \eqn{S}
represent the set of ten species and also the number ten).

\deqn{
  \mathrm{Maximize} \space \sum_{b = 0}^{B} L_b R_b \space
  \mathrm{(eqn \space 1a)} \\
  \mathrm{Subject \space to} \space R_b = 1 - \prod_{s = 0}^{S}
  ifelse(T_{bs} == 1, \space E_s, \space
  1) \space \forall \space b \in B \space \mathrm{(eqn \space 1b)} \\
  E_s = 1 - \sum_{i = 0}^{I} Y_{is} P_i B_{is} \space \forall \space s \in S
  \space \mathrm{(eqn \space 1c)} \\
  \sum_{i = 0}^{I} C_i \leq m \space
  \mathrm{(eqn \space 1d)} \\
  Y_{is} \leq X_{i} \space \forall \space i \in I, \space s \in S \space
  \mathrm{(eqn \space 1e)} \\
  \sum_{i = 0}^{I} Y_{is} = 1 \space \forall \space s \in S \space
  \mathrm{(eqn \space 1f)} \\
  R_{b} \geq 0 \space \forall \space b \in B \space
  \mathrm{(eqn \space 1g)} \\
  R_{b} \leq 1 \space \forall \space b \in B \space
  \mathrm{(eqn \space 1h)} \\
  Y_{is} \in [0, 1] \space \forall \space i \in I, \space s \in S \space
  \mathrm{(eqn \space 1i)} \\
  X_{i} \in [0, 1] \space \forall \space i \in I \space
  \mathrm{(eqn \space 1j)}}{
  Maximize sum_b^B L_b R_b (eqn 1a); Subject to:
  R_b = 1 - prod_s^S ifelse(T_{bs} == 1, E_s, 1) for all b in B (eqn 1b),
  E_s = 1 - sum_i^I Y_{is} P_i B_{is} for all s in S (eqn 1c),
  sum_i^I C_i <= m (eqn 1d),
  Y_{is} <= X_i for all i in I, s in S (eqn 1e),
  sum_i^I Y_{is} = 1 for all s in S (eqn 1f),
  R_b >= 0 for all b in B (eqn 1g),
  R_b <= 1 for all b in B (eqn 1h),
  Y_{is} in [0, 1] for all i in I, s in S (eqn 1i),
  X_i in [0, 1] for all i in I (eqn 1j)}

The objective (eqn 1a) is to maximize the amount of expected phylogenetic
history that will remain in the future. This is expressed as the sum of
branch lengths (\eqn{L_b}) weighted by the probability that at least one of
the species connected to this branch will not go extinct (\eqn{R_b}).
Constraints (eqn 1b) state that the probability that a branch will remain
(\eqn{R_b}) is equal to one minus the probability that at least one of the
species associated will not go extinct. Constraints (eqn 1c) calculate the
probability that each species will go extinct given their allocated
projects. Since each species is only allocated to a single project (per eqn
1e), we can just calculate this as one minus the sum of the probabilities
that the species would persist under each project if it were successful and
each project being successful. Constraint (eqn 1d) ensures that the
calculation for  that the total cost of the funded projects does not exceed
the budget \eqn{m}. Constraints (eqn 1e) ensure that each species can be
assigned to a project if the project has been allocated funding. Constraints
(eqn 1f) ensure that each species only be assigned to a single project.
Constraints (eqns 1g and 1h) ensure that the probability that each
phylogenetic branch will remain (\eqn{R_b}) is between zero and one.
Constraints (eqns 1i and 1j) ensure that the project funding (\eqn{X_i}) and
species' project allocation (\eqn{Y_{is}}) variables are binary.

Although this formulation is a mixed integer quadratically constrained
programming problem (due to eqn 1b), it can be linearized and then solved
using commercial mixed integer programming solvers (e.g. Gurobi). This can
be achieved by substituting the product of the species' extinction
probabilities (eqn 1b) with the sum of the log species' extinction
probabilities and using piecewise linear approximations (described in
Hillier & Price 2005 pp. 390--392) to approximate the exponent of this term.
Although this means the problem can only be solved to a pre-specified level
of precision (controlled via the argument to \code{number_approx_points}),
advances in exact algorithm solvers mean that the problem can be solved to a
sufficient degree of precision (e.g. \eqn{1 \times 10^{-5}}{1e-5}) in a
trivial period of time.
}
\examples{
# load built-in data
data(sim_project_data, sim_tree)

# print simulated project data set
print(sim_project_data)

# print simulated phylogenetic tree data set
print(sim_tree)

# plot the simulated phylogeny
plot(sim_tree, main = "simulated phylogeny")
\donttest{
# verify if guorbi package is installed
if (!require(gurobi, quietly = TRUE))
 stop("the gurobi R package is not installed.")

# find a solution that meets a budget of 300
s1 <- ppp_exact_solution(sim_project_data, sim_tree, 300,
                         "name", "cost", "success")

# print solution
print(s1)

# print the names of which projects were funded
print(names(s1)[which(unlist(s1[1, sim_project_data$name]))])

# plot solution
ppp_plot(sim_project_data, sim_tree, s1, "name", "cost", "success")

# find a solution that meets a budget of 300 and allocates
# funding for the "S1_project" project. For instance, species "S1" might
# be an iconic species that has cultural and economic importance.
sim_project_data2 <- sim_project_data
sim_project_data2$locked_in <- sim_project_data2$name == "S1_project"
s2 <- ppp_exact_solution(sim_project_data2, sim_tree, 300,
                         "name", "cost", "success",
                         locked_in_column_name = "locked_in")

# print solution
print(s2)

# plot solution
ppp_plot(sim_project_data2, sim_tree, s2, "name", "cost", "success")

# find a solution that meets a budget of 300 and does not allocate
# funding for the "S2_project" project. For instance, species "S2"
# might have very little cultural or economic importance. Broadly speaking,
# though, it is better to "lock in" "important" species rather than
# "lock out" unimportant species.
sim_project_data3 <- sim_project_data
sim_project_data3$locked_out <- sim_project_data2$name == "S2_project"
s3 <- ppp_exact_solution(sim_project_data3, sim_tree, 300,
                         "name", "cost", "success",
                         locked_out_column_name = "locked_out")

# print solution
print(s3)

# plot solution
ppp_plot(sim_project_data3, sim_tree, s3, "name", "cost", "success")
}
}
\references{
Faith DP (2008) Threatened species and the potential loss of
phylogenetic diversity: conservation scenarios based on estimated extinction
probabilities and phylogenetic risk analysis. \emph{Conservation Biology},
\strong{22}: 1461--1470.

Hillier FS & Price CC (2005) \emph{International series in operations
research & management science}. Springer.

Joseph LN, Maloney RF & Possingham HP (2009) Optimal allocation of
resources among threatened species: A project prioritization protocol.
\emph{Conservation Biology}, \strong{23}, 328--338.

Rodrigues AS & Gaston KJ (2002) Optimisation in reserve selection
procedures---why not? \emph{Biological Conservation}, \strong{107}: 123-129.

Underhill LG (1994) Optimal and suboptimal reserve selection
algorithms. \emph{Biological Conservation}, \strong{70}: 85--87.
}
\seealso{
For other methods for solving the 'Project Prioritization Protocol'
  problem, see \code{\link{ppp_heuristic_solution}},
  \code{\link{ppp_manual_solution}}, and \code{\link{ppp_random_solution}}.
  To visualize the effectiveness of a particular solution, see
  \code{\link{ppp_plot}}.
}
